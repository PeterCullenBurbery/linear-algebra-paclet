(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    223417,       4858]
NotebookOptionsPosition[    208980,       4558]
NotebookOutlinePosition[    211232,       4615]
CellTagsIndexPosition[    211145,       4610]
WindowTitle->PyramidMatrix
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[GridBox[{
   {GridBox[{
      {
       ItemBox[Cell[BoxData[
         RowBox[{
          TemplateBox[{12},
           "Spacer1"], Cell[
          "PETER BURBERY/ NEW LINEAR ALGEBRA PACLET SYMBOL", "PacletNameCell",
           TextAlignment->Center,ExpressionUUID->
           "742e9e71-820f-4804-9223-46edc6533ff2"], 
          TemplateBox[{8},
           "Spacer1"]}]],
         TextAlignment->Center,ExpressionUUID->
         "bb4b72c3-683e-4493-89b2-d72b4e75557a"],
        Background->RGBColor[0.490196, 0.576471, 0.690196],
        ItemSize->Full], ""}
     },
     GridBoxAlignment->{"Rows" -> {{Center}}},
     GridBoxItemSize->{"Columns" -> {Full, 
         Scaled[0.02]}, "Rows" -> {{2.5}}}], Cell[TextData[{
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "See Also",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "f75244df-2290-4cfc-88be-277e27c082ee"]
         }],ExpressionUUID->"d294dcbf-2466-4510-b381-c56eec703ed4"],
         StripOnInput->False],{
        "\"BoxMatrix\"" :> Documentation`HelpLookup["paclet:ref/BoxMatrix"], 
         "\"ConstantArray\"" :> 
         Documentation`HelpLookup["paclet:ref/ConstantArray"], 
         "\"DiamondMatrix\"" :> 
         Documentation`HelpLookup["paclet:ref/DiamondMatrix"], 
         "\"CrossMatrix\"" :> 
         Documentation`HelpLookup["paclet:ref/CrossMatrix"], "\"DiskMatrix\"" :> 
         Documentation`HelpLookup["paclet:ref/DiskMatrix"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"SeeAlso"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "f94865e0-e222-4254-a6d5-7bcd28a49ac5"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "Related Guides",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "0ead2a6b-44a2-4d89-bcf5-f8a181109582"]
         }],ExpressionUUID->"d905fb48-c04f-43f7-b990-10f63daeb7d6"],
         StripOnInput->False],{
        "\"Matrices\"" :> 
         Documentation`HelpLookup[
          "paclet:PeterBurbery/NewLinearAlgebraPaclet/guide/Matrices"]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"MoreAbout"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "d124010a-d305-4249-8fca-73956477d0a1"],
     "\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\[ThickSpace]\
\[ThickSpace]",
     Cell[BoxData[
      TagBox[
       ActionMenuBox[
        FrameBox[Cell[TextData[{
          "URL",
          " ",
          Cell[BoxData[
           GraphicsBox[
            {GrayLevel[0.66667], Thickness[0.13], 
             LineBox[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]},
            AspectRatio->1,
            ImageSize->20,
            PlotRange->{{-3, 4}, {-1, 1}}]],ExpressionUUID->
           "d09061ce-f12f-4d8a-8941-efa90ed19e9a"]
         }],ExpressionUUID->"79b1fe08-ba48-4eac-a0c4-88a1cec9e90f"],
         StripOnInput->False],{
        "\"PeterBurbery/NewLinearAlgebraPaclet/ref/PyramidMatrix\"" :> None, 
         "\"Copy Wolfram Documentation Center URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell["PeterBurbery/NewLinearAlgebraPaclet/ref/PyramidMatrix"]},
                Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], Delimiter, 
         "\"Copy web URL\"" :> 
         Module[{DocumentationSearch`Private`nb$}, 
           DocumentationSearch`Private`nb$ = 
            NotebookPut[
             Notebook[{
               Cell[BoxData[
                 MakeBoxes[
                  Hyperlink[
                   "http://reference.wolfram.com/language/PeterBurbery/\
NewLinearAlgebraPaclet/ref/PyramidMatrix.html"], StandardForm]], "Input", 
                 TextClipboardType -> "PlainText"]}, Visible -> False]]; 
           SelectionMove[DocumentationSearch`Private`nb$, All, Notebook]; 
           FrontEndTokenExecute[DocumentationSearch`Private`nb$, "Copy"]; 
           NotebookClose[DocumentationSearch`Private`nb$]; Null], 
         "\"Go to web URL\"" :> 
         FrontEndExecute[{
           NotebookLocate[{
             URL[If[TrueQ[DocumentationBuild`Make`Private`wsmlinkQ$155179], 
                 "http://reference.wolfram.com/system-modeler/", 
                 "http://reference.wolfram.com/language/"] <> 
               "PeterBurbery/NewLinearAlgebraPaclet/ref/PyramidMatrix" <> 
               ".html"], None}]}]},
        Appearance->None,
        MenuAppearance->Automatic,
        MenuStyle->"URLMenu"],
       MouseAppearanceTag["LinkHand"]]],
      LineSpacing->{1.4, 0},ExpressionUUID->
      "f116ccac-2a15-41f7-b5d6-3da498e48012"]
    }], "AnchorBar",
     CacheGraphics->False,ExpressionUUID->
     "74bda653-acd9-46eb-b9d4-bab5bc152d56"]}
  }]], "AnchorBarGrid",
 CellID->1,ExpressionUUID->"386fe82c-a44d-431b-8078-6f250f4d52d5"],

Cell["PeterBurbery`NewLinearAlgebraPaclet`", "ContextNameCell",ExpressionUUID->"2a9ad990-4dfc-4b4e-a6e3-c09ebc8d8ec8"],

Cell[CellGroupData[{

Cell[BoxData[GridBox[{
   {Cell[TextData[{
     Cell[
     "PyramidMatrix", "ObjectName",ExpressionUUID->
      "0594c6b2-abbe-4540-9ad8-e771713376b1"],
     Cell[BoxData[
      TemplateBox[{8},
       "Spacer1"]],ExpressionUUID->"671e1c52-8947-4229-8e01-360de4adbac5"],
     Cell[BoxData[
     ""], "ObjectNameTranslation",ExpressionUUID->
      "a531c1bf-2ef7-4a90-af22-e824026be1c3"]
    }],ExpressionUUID->"682766e0-bc9d-482e-bb79-544afc683bc1"], 
    "\[SpanFromLeft]"}
  }]], "ObjectNameGrid",ExpressionUUID->"0a445679-2cc4-4a43-a3ff-\
82e217d250d0"],

Cell[BoxData[GridBox[{
   {"", Cell[TextData[{
     Cell[BoxData[
      RowBox[{
       TemplateBox[{
         Cell[
          TextData["PyramidMatrix"]], 
         "paclet:PeterBurberyNewLinearAlgebraPaclet/ref/PyramidMatrix", 
         "PeterBurberyNewLinearAlgebraPaclet Package Symbol"},
        "PackageLink",
        BaseStyle->"InlineFormula"], "[", 
       StyleBox["n", "TI"], "]"}]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "bbf7fee1-407e-4a40-91f3-77c1e9fa9495"],
     "\[LineSeparator]makes a pyramid matrix of size ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "f9d1c1f2-baea-469e-8fbc-753c1ac7369a"],
     " by ",
     Cell[BoxData[
      StyleBox["n", "TI"]], "InlineFormula",
      FontFamily->"Source Sans Pro",ExpressionUUID->
      "73d40e1f-9b19-4c79-babe-fbf3c6db78e5"],
     "."
    }],ExpressionUUID->"b38c7137-c661-48b9-bfc8-612dae4fa97e"]}
  }]], "Usage",
 CellID->61334780,ExpressionUUID->"f40919f6-179b-434d-806c-82b3469f6af9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[Cell[BoxData[
 ButtonBox[Cell[TextData[{
   Cell[BoxData[
    DynamicBox[ToBoxes[
      If[
       MatchQ[
        CurrentValue[
         EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, 
         Closed], 
        Alternatives[Open, True]], 
       Style[
        Graphics[{
          Thickness[0.18], 
          RGBColor[0.8509803921568627, 0.396078431372549, 0], 
          Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
         PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
        0.68 Inherited], 
       Rotate[
        Style[
         Graphics[{
           Thickness[0.18], 
           RGBColor[0.8509803921568627, 0.396078431372549, 0], 
           Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
          PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
         0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
     ImageSizeCache->{
      13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
    ExpressionUUID->"90f0fc17-52b4-4897-bac9-5bb32fff2c2b"],
   Cell[BoxData[
    TemplateBox[{1},
     "Spacer1"]],ExpressionUUID->"d0a3efc2-bf3f-43ec-88de-2e33afcbb210"],
   "Details and Options"
  }], "NotesFrameText",ExpressionUUID->"80faac5d-394f-4faf-88c8-8db22f32e6fb"],
  Appearance->{Automatic, None, "Normal", Automatic},
  BaseStyle->None,
  ButtonFunction:>(FrontEndExecute[{
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], All, ButtonCell], 
     FrontEndToken["OpenCloseGroup"], 
     FrontEnd`SelectionMove[
      FrontEnd`SelectedNotebook[], After, CellContents]}]& ),
  Evaluator->None,
  Method->
   "Preemptive"]],ExpressionUUID->"44620386-626d-4935-9961-c78dfe6c5a30"]], \
"NotesSection",
 WholeCellGroupOpener->True,
 CellGroupingRules->{"SectionGrouping", 50},
 CacheGraphics->False,
 CellID->53038814,ExpressionUUID->"0b503c1d-0d06-4d56-b3df-2d92306b7bd1"],

Cell[TextData[{
 "This was inspired by ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["Beecrowd Programming challenge 1435 Square Matrix I"]], 
    "https://www.beecrowd.com.br/judge/en/problems/view/1435"},
   "WebLink",
   BaseStyle->{"Notes"}]],ExpressionUUID->
  "3ceee865-c7ef-4a61-8842-219ccddd63c4"],
 "."
}], "Notes",
 CellID->134360864,ExpressionUUID->"60a2d4cf-b734-4ad1-a4d9-e0cda93ce838"],

Cell["\<\
I call it a pyramid matrix because if you extruded this in 3D, it would look \
like a square pyramid.\
\>", "Notes",
 CellID->61854692,ExpressionUUID->"4a90e0e2-a28a-4254-bfe1-f144ea45bfd1"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {
       TaggingRules, "Openers", "PrimaryExamplesSection"}, Open], 
      Alternatives[True, Open]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"76e8fb5b-5e7f-4b97-9be8-3a5a90d8275e"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"c1ba0ff5-d9e8-43a7-a703-72743a5ecf9a"],
 "Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(2)", "ExampleCount",ExpressionUUID->
  "35c68155-be42-4468-8027-6b653c509bd5"]
}], "PrimaryExamplesSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellTags->"PrimaryExamplesSection",
 CellID->33887368,ExpressionUUID->"d9a00bdd-9fae-49e6-90b7-68b7afb2a29a"],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<PeterBurbery`NewLinearAlgebraPaclet`\>\"", 
  "]"}]], "Input", "ExampleInitialization",
 CellLabel->"In[1]:=",
 CellID->457418858,ExpressionUUID->"9b62df82-9e6f-4cf0-a2f3-c934078634c9"],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{13.600000000000001`, {5., 8.600000000000001}}]],
  ExpressionUUID->"02f40212-0c64-46be-9b9c-a69ab6a7452e"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"72507bba-fe6e-478b-aabf-94044bc31b05"],
 "Basic Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "dab152e9-d10b-406d-aa98-708efaa7bd3a"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->260369959,ExpressionUUID->"6263aac8-043f-40fe-8e96-4245cafc2c25"],

Cell["Here are some pyramid matrices:", "ExampleText",
 CellID->2307510,ExpressionUUID->"d0112831-1d77-400c-b660-574a368a2689"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "/@", 
  RowBox[{"PyramidMatrix", "/@", 
   RowBox[{"Range", "[", "7", "]"}]}]}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[1]:=",
 CellID->358765751,ExpressionUUID->"989c6e24-0de7-4857-94d9-adad8683472c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "1"},
       {"1", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "1", "1"},
       {"1", "2", "1"},
       {"1", "1", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "1", "1", "1"},
       {"1", "2", "2", "1"},
       {"1", "2", "2", "1"},
       {"1", "1", "1", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "1", "1", "1", "1"},
       {"1", "2", "2", "2", "1"},
       {"1", "2", "3", "2", "1"},
       {"1", "2", "2", "2", "1"},
       {"1", "1", "1", "1", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "1", "1", "1", "1", "1"},
       {"1", "2", "2", "2", "2", "1"},
       {"1", "2", "3", "3", "2", "1"},
       {"1", "2", "3", "3", "2", "1"},
       {"1", "2", "2", "2", "2", "1"},
       {"1", "1", "1", "1", "1", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]], ",", 
   TagBox[
    RowBox[{"(", "\[NoBreak]", GridBox[{
       {"1", "1", "1", "1", "1", "1", "1"},
       {"1", "2", "2", "2", "2", "2", "1"},
       {"1", "2", "3", "3", "3", "2", "1"},
       {"1", "2", "3", "4", "3", "2", "1"},
       {"1", "2", "3", "3", "3", "2", "1"},
       {"1", "2", "2", "2", "2", "2", "1"},
       {"1", "1", "1", "1", "1", "1", "1"}
      },
      GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
      GridBoxSpacings->{"Columns" -> {
          Offset[0.27999999999999997`], {
           Offset[0.7]}, 
          Offset[0.27999999999999997`]}, "Rows" -> {
          Offset[0.2], {
           Offset[0.4]}, 
          Offset[0.2]}}], "\[NoBreak]", ")"}],
    Function[BoxForm`e$, 
     MatrixForm[BoxForm`e$]]]}], "}"}]], "Output",
 CellLabel->"Out[1]=",
 CellID->52076197,ExpressionUUID->"2ffb9eac-647d-4bb3-bf2a-93be7e99fb01"]
}, Open  ]],

Cell["\<\
Here is a big pyramid matrix with an even number of elements. Notice the 4 \
12s in the middle:\
\>", "ExampleText",
 CellID->458868385,ExpressionUUID->"783bf289-01a9-4b6d-be8d-6f4831b4654b"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PyramidMatrix", "[", "24", "]"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[2]:=",
 CellID->412061603,ExpressionUUID->"4150b615-3b8c-401e-bd2e-013eae9398cd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"},
     {"1", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "1"},
     {"1", "2", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", 
      "3", "3", "3", "3", "3", "3", "3", "3", "2", "1"},
     {"1", "2", "3", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", 
      "5", "5", "5", "5", "5", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "6", "6", "6", "6", "6", "6", "6", "6", 
      "6", "6", "6", "6", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "8", "8", "8", "8", "8", "8", 
      "8", "8", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "9", "9", "9", "9", "9", 
      "9", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "10", "10", "10", 
      "10", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "11", "11", 
      "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "12", 
      "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "12", 
      "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "11", "11", 
      "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "10", "10", "10", 
      "10", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "9", "9", "9", "9", "9", 
      "9", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "8", "8", "8", "8", "8", "8", 
      "8", "8", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "6", "6", "6", "6", "6", "6", "6", "6", 
      "6", "6", "6", "6", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", 
      "5", "5", "5", "5", "5", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "3", "2", "1"},
     {"1", "2", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", 
      "3", "3", "3", "3", "3", "3", "3", "3", "2", "1"},
     {"1", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "1"},
     {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[2]//MatrixForm=",
 CellID->454915030,ExpressionUUID->"f72c0bc4-caf1-4b75-9d4b-f5f5e0ec7029"]
}, Open  ]],

Cell["\<\
Here is a big pyramid matrix with an odd number of elements. Notice the 13 in \
the middle of the ring of 12s:\
\>", "ExampleText",
 CellID->128603843,ExpressionUUID->"e27bda56-35b7-4d8a-bbe3-e88356fb5274"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PyramidMatrix", "[", "25", "]"}], "//", "MatrixForm"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[3]:=",
 CellID->622187495,ExpressionUUID->"0e8ed541-4b06-47d6-98a2-ee36dac47392"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"},
     {"1", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "1"},
     {"1", "2", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", 
      "3", "3", "3", "3", "3", "3", "3", "3", "3", "2", "1"},
     {"1", "2", "3", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", 
      "5", "5", "5", "5", "5", "5", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "6", "6", "6", "6", "6", "6", "6", "6", 
      "6", "6", "6", "6", "6", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "8", "8", "8", "8", "8", "8", 
      "8", "8", "8", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "9", "9", "9", "9", "9", 
      "9", "9", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "10", "10", "10", 
      "10", "10", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "11", "11", 
      "11", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "12", 
      "12", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "13", 
      "12", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "12", "12", 
      "12", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "11", "11", "11", 
      "11", "11", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "10", "10", "10", 
      "10", "10", "10", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "9", "9", "9", "9", "9", "9", 
      "9", "9", "9", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "8", "8", "8", "8", "8", "8", "8", 
      "8", "8", "8", "8", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "7", "7", "7", "7", "7", "7", "7", "7", 
      "7", "7", "7", "7", "7", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "6", "6", "6", "6", "6", "6", "6", "6", "6", 
      "6", "6", "6", "6", "6", "6", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "5", "5", "5", "5", "5", "5", "5", "5", "5", "5", 
      "5", "5", "5", "5", "5", "5", "5", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", "4", 
      "4", "4", "4", "4", "4", "4", "4", "4", "3", "2", "1"},
     {"1", "2", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", "3", 
      "3", "3", "3", "3", "3", "3", "3", "3", "3", "2", "1"},
     {"1", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", 
      "2", "2", "2", "2", "2", "2", "2", "2", "2", "2", "1"},
     {"1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", 
      "1", "1", "1", "1", "1", "1", "1", "1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[3]//MatrixForm=",
 CellID->425553151,ExpressionUUID->"1faf10c5-bd59-407d-ad73-94e1e1f1aaaa"]
}, Open  ]],

Cell["Format the matrix with a dataset:", "ExampleText",
 CellID->516833841,ExpressionUUID->"165e1fe2-fda9-4406-b8c8-98bf85238e47"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"PyramidMatrix", "[", "9", "]"}], "//", "Dataset"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[4]:=",
 CellID->412806393,ExpressionUUID->"8b52780e-8188-4956-8a97-93acde263711"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {{1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 2, 2, 2, 
      1}, {1, 2, 3, 3, 3, 3, 3, 2, 1}, {1, 2, 3, 4, 4, 4, 3, 2, 1}, {1, 2, 3, 
      4, 5, 4, 3, 2, 1}, {1, 2, 3, 4, 4, 4, 3, 2, 1}, {1, 2, 3, 3, 3, 3, 3, 2,
       1}, {1, 2, 2, 2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1}}, 
     "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[9, 9], 9, 9, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 9], 9], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[9, 9], 9, 9, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 9], 9], "Path" -> {}, "DisplayedRowCount" -> 
     9, "DisplayedColumnCount" -> 9, "DataRowCount" -> 9, "DataColumnCount" -> 
     9, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["5"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{9, 9}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{379., {127.3544921875, 132.6455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{379., {127.3544921875, 132.6455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[4]=",
 CellID->311524691,ExpressionUUID->"19b1c3c2-2980-4050-bb84-b85fb0caf716"]
}, Open  ]],

Cell["Format the matrix with a grid:", "ExampleText",
 CellID->635113846,ExpressionUUID->"5528b6bd-ac9b-4358-a9d9-1e5bc11eafda"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"PyramidMatrix", "[", "9", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[5]:=",
 CellID->11790604,ExpressionUUID->"218e25d7-df58-45cf-a677-ce36b4b89205"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1", "1", "1", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "5", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "1", "1", "1", "1", "1", "1", "1", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[5]=",
 CellID->18889600,ExpressionUUID->"2b95e0e7-d22b-4f9b-86a7-4bdcc8c87a8f"]
}, Open  ]],

Cell["Format the matrix with a frame too.:", "ExampleText",
 CellID->35977684,ExpressionUUID->"72c45995-f796-480c-a3fc-7581361ba8a5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PyramidMatrix", "[", "9", "]"}], ",", 
   RowBox[{"Frame", "->", "True"}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[6]:=",
 CellID->247547601,ExpressionUUID->"a44cdfde-5b23-4313-8517-b577a7de6762"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1", "1", "1", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "5", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "1", "1", "1", "1", "1", "1", "1", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[6]=",
 CellID->576449523,ExpressionUUID->"c024742a-798f-48a9-9cc3-4477f28b6299"]
}, Open  ]],

Cell["Use different frame options. Put a grid around all elements:", \
"ExampleText",
 CellID->518542061,ExpressionUUID->"95ed4e47-f6a1-4188-ae9b-2a10371d732a"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"PyramidMatrix", "[", "9", "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[7]:=",
 CellID->278823240,ExpressionUUID->"6e7fdee1-02e6-4a8d-8a84-b04a6aced27f"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1", "1", "1", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "5", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "1", "1", "1", "1", "1", "1", "1", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[7]=",
 CellID->125272345,ExpressionUUID->"478d7d37-0baa-40ca-91c4-eb527e39f9fa"]
}, Open  ]],

Cell["Make a table instead:", "ExampleText",
 CellID->691650248,ExpressionUUID->"22ba07a6-d8b9-4867-9c6e-1582b6e71317"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"PyramidMatrix", "[", "9", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[8]:=",
 CellID->244234177,ExpressionUUID->"2063d039-4a92-43b7-9f34-bac8ba0b9b95"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1", "1", "1", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "5", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "1", "1", "1", "1", "1", "1", "1", "1"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[8]//TableForm=",
 CellID->29061492,ExpressionUUID->"ab059dd3-46f7-4802-ab97-96e307b00ae6"]
}, Open  ]],

Cell["Make a table view instead:", "ExampleText",
 CellID->286213049,ExpressionUUID->"b55b5528-65ce-4a0f-bc91-842e89ece9af"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableView", "[", 
  RowBox[{"PyramidMatrix", "[", "9", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[9]:=",
 CellID->231773,ExpressionUUID->"391a4200-1081-4b64-b3c1-5633b5a7615e"],

Cell[BoxData[
 TableViewBox[{{1, 1, 1, 1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 2, 2, 2, 1}, {1, 
  2, 3, 3, 3, 3, 3, 2, 1}, {1, 2, 3, 4, 4, 4, 3, 2, 1}, {1, 2, 3, 4, 5, 4, 3, 
  2, 1}, {1, 2, 3, 4, 4, 4, 3, 2, 1}, {1, 2, 3, 3, 3, 3, 3, 2, 1}, {1, 2, 2, 
  2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1, 1, 1, 1}}, {Number, String},
  ScrollPosition->{0., 0.}]], "Output",
 CellLabel->"Out[9]=",
 CellID->232744385,ExpressionUUID->"5ed65666-ef64-4180-84eb-6b086cc2ad6f"]
}, Open  ]],

Cell["Make an array plot:", "ExampleText",
 CellID->20154116,ExpressionUUID->"1eff85e0-28e3-425a-9b7a-7f463e33dbbb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{"PyramidMatrix", "[", "9", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[10]:=",
 CellID->84392691,ExpressionUUID->"871cc881-4bea-492a-9925-dbf7a586a4ac"],

Cell[BoxData[
 GraphicsBox[
  RasterBox[{{4, 4, 4, 4, 4, 4, 4, 4, 4}, {4, 3, 3, 3, 3, 3, 3, 3, 4}, {4, 3, 
   2, 2, 2, 2, 2, 3, 4}, {4, 3, 2, 1, 1, 1, 2, 3, 4}, {4, 3, 2, 1, 0, 1, 2, 3,
    4}, {4, 3, 2, 1, 1, 1, 2, 3, 4}, {4, 3, 2, 2, 2, 2, 2, 3, 4}, {4, 3, 3, 3,
    3, 3, 3, 3, 4}, {4, 4, 4, 4, 4, 4, 4, 4, 4}}, {{0, 0}, {9, 9}}, {0, 5}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->"Out[10]=",
 CellID->190688267,ExpressionUUID->"f1d72ac7-4a11-4134-ab52-b18ffaed50ec"]
}, Open  ]],

Cell["Make an array plot with different colors:", "ExampleText",
 CellID->115887351,ExpressionUUID->"25c9e918-664a-4bea-8f06-536fc90ea8ec"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"PyramidMatrix", "[", "9", "]"}], ",", 
   RowBox[{"ColorFunction", "->", "Hue"}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[11]:=",
 CellID->57004525,ExpressionUUID->"74696c9e-8945-423d-b8fa-2e45f0f01b3f"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghGIQGwI+2DNgBcNV/IE9dvnBJk4tf6Hrw2UPtcUHyl8P
cNhHqjgh8weLvwiZj8sdg91fQz2+aC1Oa38NNvHBVo/QThwA4x6YcQ==
   "], {{0, 0}, {9, 9}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->"Out[11]=",
 CellID->150935467,ExpressionUUID->"12e0a6e6-f44b-4689-9a56-28969f1be126"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"PyramidMatrix", "[", "9", "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<DarkRainbow\>\""}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[12]:=",
 CellID->455480318,ExpressionUUID->"bd23a867-1bcf-4f50-93f4-22423d7903f8"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghGIQ26mqS0Yp75z918/LlESPXbUvULmQEJz+yH64iuvG
HjR7dPKiPcexg0uTz92xz9ZUeFvPcHXQiVPLX5I2Pr+f/Xtsf3jWqUUbup/a
P1ote9Ty1QWaiw+Uv0J+zpvIwfvaPmNSRNA7oPym67vt72lfIVl8qPjrwuyu
EIno5/baP2/ELlhyzv5l0mUvxQlnh7y/hnp8DfX8NdjEB1s9QmtxALwU49A=

   "], {{0, 0}, {9, 9}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->"Out[12]=",
 CellID->330864828,ExpressionUUID->"bd4b147c-25c1-4dc7-8219-10a38bd707a3"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"PyramidMatrix", "[", "9", "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<Rainbow\>\""}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[13]:=",
 CellID->7469493,ExpressionUUID->"3b415342-f5b6-4d04-82a0-1ef0b7a03fcd"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghGIQ+6PHHpu52vfszda/WiN2Y7f94/99KwLuPrAfruK+
B9ZPVOG4aL/mH8fhBtX79k7vlHwC170cdOLU8ted3Wy1L3Mf2Dt6iBk0Rj+3
D3la7aZkcofm4gPlr/rmb68eL3xt/y62ed+Xsqf2F2ZuWbnL/RzJ4kPFX6/O
2KrU5L+2XzRT/brIiQP2x1MK/098eWDI+2uox9dQz1+DTXyw1SO0FgcAwucI
Ig==
   "], {{0, 0}, {9, 9}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->"Out[13]=",
 CellID->23697899,ExpressionUUID->"6325d3f2-b5e3-4a89-88c5-9d6904c174f2"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"PyramidMatrix", "[", "9", "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<Pastel\>\""}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[14]:=",
 CellID->207499931,ExpressionUUID->"764ff9de-d726-44e6-9d20-aa2ed31734fb"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghGIQO2KSzfXviS/snzpWdcko3bOXfW72ME7ynf1wFX/Q
4sQic+iN/fNDHvpZ35/a7+bStF+57emgE6eWv24/cPmSvfqdveGFrfoLxN/Y
H19YJ77t2SOaiw+UvxZpWv9d0Pfa/m3tKi7eI2/tW63WFJx2f0Gy+FDx17HA
nZ1Rs27b9627dLd02zN76W/VSXNXvR3y/hrq8TXU89dgEx9s9QitxQHEFuhy

   "], {{0, 0}, {9, 9}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->"Out[14]=",
 CellID->163031000,ExpressionUUID->"8d9a336a-3172-4086-885f-a00e097d199c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"PyramidMatrix", "[", "9", "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<Aquamarine\>\""}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[15]:=",
 CellID->124966366,ExpressionUUID->"17a16633-c2fd-4c62-96dd-f9d6308fb650"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghGIQm++2WKrZiaf20RefWWzvfG7fx7x+mrXxa/vhKi63
5n/xjPPP7S/GLJ84bdVL+0UqKpfM4gafOLX8ZZ8bspw58rH99L+7Ls9Nf26/
ukL584n7L2guPlD+utNSnXov6759GPcbw4lGT+0jSl6b2nY8J1l8qPhru/Ph
pCumT+zPXHz83az2ub32kj9Lbqm/HvL+GurxNdTz12ATH2z1CK3FAfVM9KQ=

   "], {{0, 0}, {9, 9}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->"Out[15]=",
 CellID->460099264,ExpressionUUID->"38237d70-34e0-44ee-9925-8bbb193f6548"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ArrayPlot", "[", 
  RowBox[{
   RowBox[{"PyramidMatrix", "[", "9", "]"}], ",", 
   RowBox[{"ColorFunction", "->", "\"\<BrassTones\>\""}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[16]:=",
 CellID->223905323,ExpressionUUID->"58852b5f-b6f7-4388-907e-ec27b91c216d"],

Cell[BoxData[
 GraphicsBox[RasterBox[CompressedData["
1:eJxTTMoPSmVmYGDghGIQu+2FgIVQxiH7bcKqihO3Hba3Efj3Skxthf1wFZ9s
Oa38KvNT+yMzvnwP+vHIfq24s+XFdRcHnTi1/CWwIeztrAmv7T3+JTzY+f2F
fdup/dPC192gufhA+evL8t5XJQue2/vuu/nsWMlTexnXa1Jeb6+QLD5U/MUe
P8NHtOeYff8Dt1Ninkft/zme7JSOWT3k/TXU42uo56/BJj7Y6hFaiwMAiAjg
iw==
   "], {{0, 0}, {9, 9}}, {0, 1}],
  Frame->Automatic,
  FrameLabel->{None, None},
  FrameTicks->{{None, None}, {None, None}},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "GridLinesInFront" -> True, "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultPlotStyle" -> 
    Automatic}]], "Output",
 CellLabel->"Out[16]=",
 CellID->696581826,ExpressionUUID->"47bee20b-3fe2-4ce8-8e9a-beb592cd748d"]
}, Open  ]],

Cell["Make an image.", "ExampleText",
 CellID->62779177,ExpressionUUID->"e0635b31-8462-4023-bff9-de43576472bd"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ImageAdjust", "[", 
  RowBox[{"Image", "[", 
   RowBox[{"PyramidMatrix", "[", "9", "]"}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[17]:=",
 CellID->338257379,ExpressionUUID->"c592a3d8-21bb-4285-a2c4-a9911dc22b67"],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJxTTMoPSmNiYGAo5gASQYnljkVFiZXBbCBOamKOsVEOSJITiokHDXa4MbIa
BntMjE2NAxLGp6aBCDWEzCHkHkL+wg8Az9giig==
    "], {{0, 9.}, {9., 0}}, {0., 1.},
    ColorFunction->GrayLevel],
   BoxForm`ImageTag["Real32", ColorSpace -> Automatic, Interleaving -> None],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSizeRaw->{9., 9.},
  PlotRange->{{0, 9.}, {0, 9.}}]], "Output",
 CellLabel->"Out[17]=",
 CellID->241052656,ExpressionUUID->"d192613a-476e-414d-abc0-515220cfd141"]
}, Open  ]],

Cell["There might be a way to make a 3D image somehow.", "ExampleText",
 CellID->279011105,ExpressionUUID->"15de04e7-8c52-4efd-aac8-ff252d955634"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, 
  Closed]]]],

Cell[CellGroupData[{

Cell[TextData[{
 Cell[BoxData[
  DynamicBox[ToBoxes[
    If[
     MatchQ[
      CurrentValue[
       EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"},
        Closed], 
      Alternatives[Open, True]], 
     Style[
      Graphics[{
        Thickness[0.18], 
        RGBColor[0.8509803921568627, 0.396078431372549, 0], 
        Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
       PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
      0.68 Inherited], 
     Rotate[
      Style[
       Graphics[{
         Thickness[0.18], 
         RGBColor[0.8509803921568627, 0.396078431372549, 0], 
         Line[{{-1.8, 0.5}, {0, 0}, {1.8, 0.5}}]}, AspectRatio -> 1, 
        PlotRange -> {{-3, 4}, {-1, 1}}, ImageSize -> 20], Magnification -> 
       0.68 Inherited], Rational[1, 2] Pi, {-1.65, -1}]]],
   ImageSizeCache->{
    13.600000000000001`, {0.5800000000000001, 13.020000000000001`}}]],
  ExpressionUUID->"3740c8ce-3f0c-42a2-be05-999e0584e29e"],
 Cell[BoxData[
  TemplateBox[{1},
   "Spacer1"]],ExpressionUUID->"63e5e1ef-5487-4c21-8cff-1f852750924d"],
 "Neat Examples",
 "\[NonBreakingSpace]\[NonBreakingSpace]",
 Cell["(1)", "ExampleCount",ExpressionUUID->
  "35ee6238-af55-4505-a898-420b9b170eb5"]
}], "ExampleSection", "ExampleSection",
 WholeCellGroupOpener->True,
 CacheGraphics->False,
 CellID->356344989,ExpressionUUID->"47e266d2-12c7-482d-a3b6-cd38eead3abe"],

Cell["\<\
You can also define a function that generates a pyramid matrix with \
LLMExampleFunction.\
\>", "ExampleText",
 CellID->319252617,ExpressionUUID->"d6325548-5f32-453d-a99f-423df758c2a3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"noMatrixFormFunction", "=", 
  RowBox[{"LLMExampleFunction", "[", 
   RowBox[{"MapThread", "[", 
    RowBox[{"Rule", ",", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Range", "[", "7", "]"}], ",", 
       RowBox[{"PyramidMatrix", "/@", 
        RowBox[{"Range", "[", "7", "]"}]}]}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[1]:=",
 CellID->794541499,ExpressionUUID->"df702c1f-0b4e-439b-aab3-3f460309c7bb"],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   TagBox["LLMFunction",
    "SummaryHead"], "[", 
   DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = "Ready"}, 
    TemplateBox[{
      PaneSelectorBox[{False -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]], 
              ButtonFunction :> (Typeset`open$$ = True), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], "", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    "\"Input: 1\\nOutput: {{1}}\\n\\nInput: 2\\nOutput: {{1, \
1}, {1, 1}}\\n\\nInput: 3\\nOutput: {{1, 1, 1}, {1, 2, 1}, {1, 1, \
1}}\\n\\nInput: 4\\nOutput: {{1, 1, 1, 1}, {1, 2, 2, 1}, {1, 2, 2, 1}, {1, 1, \
1, 1}}\\n\\nInput: 5\\nOutput: {{1, 1, 1, 1, 1}, {1, 2, 2, 2, 1}, {1, 2, 3, \
2, 1}, {1, 2, 2, 2, 1}, {1, 1, 1, 1, 1}}\\n\\nInput: 6\\nOutput: {{1, 1, 1, \
1, 1, 1}, {1, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 2, 1}, {1, 2, 3, 3, 2, 1}, {1, 2, \
2, 2, 2, 1}, {1, 1, 1, 1, 1, 1}}\\n\\nInput: 7\\nOutput: {{1, 1, 1, 1, 1, 1, \
1}, {1, 2, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 3, 2, 1}, {1, 2, 3, 4, 3, 2, 1}, {1, \
2, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1, 1}}\"", 
                    "\"\\n\\nInput: \"", 
                    
                    TemplateBox[{"1"}, "TemplateSlot", 
                    DisplayFunction -> (
                    FrameBox[#, Background -> RGBColor[0.945, 0.992, 1.], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\nOutput:\""}, "RowDefault"], 
                   Deploy, DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "1", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}], True -> GridBox[{{
            PaneBox[
             ButtonBox[
              DynamicBox[
               FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]], 
              ButtonFunction :> (Typeset`open$$ = False), Appearance -> None, 
              BaseStyle -> {}, Evaluator -> Automatic, Method -> 
              "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
             Dynamic[{
               Automatic, 
                3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                 Magnification])}]], "", 
            GridBox[{{
               RowBox[{
                 TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TagBox[
                   
                   TemplateBox[{
                    "\"Input: 1\\nOutput: {{1}}\\n\\nInput: 2\\nOutput: {{1, \
1}, {1, 1}}\\n\\nInput: 3\\nOutput: {{1, 1, 1}, {1, 2, 1}, {1, 1, \
1}}\\n\\nInput: 4\\nOutput: {{1, 1, 1, 1}, {1, 2, 2, 1}, {1, 2, 2, 1}, {1, 1, \
1, 1}}\\n\\nInput: 5\\nOutput: {{1, 1, 1, 1, 1}, {1, 2, 2, 2, 1}, {1, 2, 3, \
2, 1}, {1, 2, 2, 2, 1}, {1, 1, 1, 1, 1}}\\n\\nInput: 6\\nOutput: {{1, 1, 1, \
1, 1, 1}, {1, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 2, 1}, {1, 2, 3, 3, 2, 1}, {1, 2, \
2, 2, 2, 1}, {1, 1, 1, 1, 1, 1}}\\n\\nInput: 7\\nOutput: {{1, 1, 1, 1, 1, 1, \
1}, {1, 2, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 3, 2, 1}, {1, 2, 3, 4, 3, 2, 1}, {1, \
2, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1, 1}}\"", 
                    "\"\\n\\nInput: \"", 
                    
                    TemplateBox[{"1"}, "TemplateSlot", 
                    DisplayFunction -> (
                    FrameBox[#, Background -> RGBColor[0.945, 0.992, 1.], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\nOutput:\""}, "RowDefault"], 
                   Deploy, DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox[
                  TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "1", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"CombinerFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["StringJoin", "SummaryItem"]}]}, {
               RowBox[{
                 TagBox["\"InsertionFunction: \"", "SummaryItemAnnotation"], 
                 "\[InvisibleSpace]", 
                 TagBox["TextString", "SummaryItem"]}]}}, 
             GridBoxAlignment -> {
              "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
             False, GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{2}}, "Rows" -> {{Automatic}}},
              BaseStyle -> {
              ShowStringCharacters -> False, NumberMarks -> False, 
               PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
          GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
          AutoDelete -> False, 
          GridBoxItemSize -> {
           "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
          BaselinePosition -> {1, 1}]}, 
       Dynamic[Typeset`open$$], ImageSize -> Automatic]},
     "SummaryPanel"],
    DynamicModuleValues:>{}], "]"}],
  LLMFunction[
   TemplateObject[{
    "Input: 1\nOutput: {{1}}\n\nInput: 2\nOutput: {{1, 1}, {1, 1}}\n\nInput: \
3\nOutput: {{1, 1, 1}, {1, 2, 1}, {1, 1, 1}}\n\nInput: 4\nOutput: {{1, 1, 1, \
1}, {1, 2, 2, 1}, {1, 2, 2, 1}, {1, 1, 1, 1}}\n\nInput: 5\nOutput: {{1, 1, 1, \
1, 1}, {1, 2, 2, 2, 1}, {1, 2, 3, 2, 1}, {1, 2, 2, 2, 1}, {1, 1, 1, 1, 1}}\n\n\
Input: 6\nOutput: {{1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 2, \
1}, {1, 2, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1}}\n\nInput: 7\n\
Output: {{1, 1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 3, 2, 1}, \
{1, 2, 3, 4, 3, 2, 1}, {1, 2, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 1}, {1, 1, \
1, 1, 1, 1, 1}}", "\n\nInput: ", 
     TemplateSlot[1], "\nOutput:"}, {{}, CombinerFunction -> StringJoin, 
     InsertionFunction -> TextString}], "String", {}],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[1]=",
 CellID->43130629,ExpressionUUID->"8ab8fa8e-7036-443c-9534-bdefe5c72843"]
}, Open  ]],

Cell[TextData[{
 "Test the function. I am using EchoPerformance, which you can install from \
my ",
 Cell[BoxData[
  TemplateBox[{
    Cell[
     TextData["NewProgrammingUtilitiesPaclet paclet"]], 
    "https://resources.wolframcloud.com/PacletRepository/resources/\
PeterBurbery/NewProgrammingUtilitiesPaclet/"},
   "WebLink",
   BaseStyle->{"ExampleText"}]],ExpressionUUID->
  "db3bb3ab-02b1-4b53-8606-ed21f7ece72a"],
 ". If you install this paclet, EchoPerformance will be loaded on startup. \
This is slower than using PyramidMatrix. PyramidMatrix does not require Open \
AI's API (which costs money) and is faster and requires no Internet \
connection. This method requires setting up an Open AI API account, paying \
money for API credits, is slower, and requires an Internet connection."
}], "ExampleText",
 CellID->103935485,ExpressionUUID->"c50741f8-7875-4d46-97b8-015418e34d48"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EchoPerformance", "[", 
  RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[2]:=",
 CellID->430295149,ExpressionUUID->"326e2bc9-bcdb-46a4-843e-95e5eb816cfa"],

Cell[BoxData[
 RowBox[{
  TagBox[
   InterpretationBox[
    RowBox[{
     TagBox["LLMFunction",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], "", 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    
                    TemplateBox[{
                    "\"Input: 1\\nOutput: {{1}}\\n\\nInput: 2\\nOutput: {{1, \
1}, {1, 1}}\\n\\nInput: 3\\nOutput: {{1, 1, 1}, {1, 2, 1}, {1, 1, \
1}}\\n\\nInput: 4\\nOutput: {{1, 1, 1, 1}, {1, 2, 2, 1}, {1, 2, 2, 1}, {1, 1, \
1, 1}}\\n\\nInput: 5\\nOutput: {{1, 1, 1, 1, 1}, {1, 2, 2, 2, 1}, {1, 2, 3, \
2, 1}, {1, 2, 2, 2, 1}, {1, 1, 1, 1, 1}}\\n\\nInput: 6\\nOutput: {{1, 1, 1, \
1, 1, 1}, {1, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 2, 1}, {1, 2, 3, 3, 2, 1}, {1, 2, \
2, 2, 2, 1}, {1, 1, 1, 1, 1, 1}}\\n\\nInput: 7\\nOutput: {{1, 1, 1, 1, 1, 1, \
1}, {1, 2, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 3, 2, 1}, {1, 2, 3, 4, 3, 2, 1}, {1, \
2, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1, 1}}\"", 
                    "\"\\n\\nInput: \"", 
                    
                    TemplateBox[{"1"}, "TemplateSlot", 
                    DisplayFunction -> (
                    FrameBox[#, Background -> RGBColor[0.945, 0.992, 1.], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\nOutput:\""}, "RowDefault"], 
                    Deploy, DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "1", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], "", 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Content: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TagBox[
                    
                    TemplateBox[{
                    "\"Input: 1\\nOutput: {{1}}\\n\\nInput: 2\\nOutput: {{1, \
1}, {1, 1}}\\n\\nInput: 3\\nOutput: {{1, 1, 1}, {1, 2, 1}, {1, 1, \
1}}\\n\\nInput: 4\\nOutput: {{1, 1, 1, 1}, {1, 2, 2, 1}, {1, 2, 2, 1}, {1, 1, \
1, 1}}\\n\\nInput: 5\\nOutput: {{1, 1, 1, 1, 1}, {1, 2, 2, 2, 1}, {1, 2, 3, \
2, 1}, {1, 2, 2, 2, 1}, {1, 1, 1, 1, 1}}\\n\\nInput: 6\\nOutput: {{1, 1, 1, \
1, 1, 1}, {1, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 2, 1}, {1, 2, 3, 3, 2, 1}, {1, 2, \
2, 2, 2, 1}, {1, 1, 1, 1, 1, 1}}\\n\\nInput: 7\\nOutput: {{1, 1, 1, 1, 1, 1, \
1}, {1, 2, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 3, 2, 1}, {1, 2, 3, 4, 3, 2, 1}, {1, \
2, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1, 1}}\"", 
                    "\"\\n\\nInput: \"", 
                    
                    TemplateBox[{"1"}, "TemplateSlot", 
                    DisplayFunction -> (
                    FrameBox[#, Background -> RGBColor[0.945, 0.992, 1.], 
                    BaselinePosition -> Baseline, 
                    BaseStyle -> {ShowStringCharacters -> True}, 
                    FrameMargins -> {{2, 2}, {0, 0}}, FrameStyle -> 
                    RGBColor[0.698, 0.898, 0.9255], RoundingRadius -> 3]& ), 
                    Tooltip -> Automatic], "\"\\nOutput:\""}, "RowDefault"], 
                    Deploy, DefaultBaseStyle -> "Deploy"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Parameters: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    TemplateBox[{",", "\",\"", 
                    StyleBox[
                    "1", ShowStringCharacters -> True, StripOnInput -> 
                    False]}, "RowWithSeparators"], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"CombinerFunction: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["StringJoin", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"InsertionFunction: \"", "SummaryItemAnnotation"],
                    "\[InvisibleSpace]", 
                   TagBox["TextString", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    LLMFunction[
     TemplateObject[{
      "Input: 1\nOutput: {{1}}\n\nInput: 2\nOutput: {{1, 1}, {1, 1}}\n\n\
Input: 3\nOutput: {{1, 1, 1}, {1, 2, 1}, {1, 1, 1}}\n\nInput: 4\nOutput: {{1, \
1, 1, 1}, {1, 2, 2, 1}, {1, 2, 2, 1}, {1, 1, 1, 1}}\n\nInput: 5\nOutput: {{1, \
1, 1, 1, 1}, {1, 2, 2, 2, 1}, {1, 2, 3, 2, 1}, {1, 2, 2, 2, 1}, {1, 1, 1, 1, \
1}}\n\nInput: 6\nOutput: {{1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 1}, {1, 2, 3, \
3, 2, 1}, {1, 2, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1}}\n\n\
Input: 7\nOutput: {{1, 1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 2, 1}, {1, 2, 3, 3, \
3, 2, 1}, {1, 2, 3, 4, 3, 2, 1}, {1, 2, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, \
1}, {1, 1, 1, 1, 1, 1, 1}}", "\n\nInput: ", 
       TemplateSlot[1], "\nOutput:"}, {{}, CombinerFunction -> StringJoin, 
       InsertionFunction -> TextString}], "String", {}],
    Editable->False,
    SelectWithContents->True,
    Selectable->False],
   "EchoLabel"], "  ", 
  RowBox[{"{", 
   RowBox[{
    StyleBox[
     TemplateBox[{"31.9167338`", "\" s\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]], ",", 
    StyleBox[
     TemplateBox[{"26610848", "\" B\""},
      "RowDefault"],
     StripOnInput->False,
     LineColor->RGBColor[0.52, 0.45, 0.4],
     FrontFaceColor->RGBColor[0.52, 0.45, 0.4],
     BackFaceColor->RGBColor[0.52, 0.45, 0.4],
     GraphicsColor->RGBColor[0.52, 0.45, 0.4],
     FontColor->RGBColor[0.52, 0.45, 0.4]]}], "}"}]}]], "Echo",
 CellID->247804044,ExpressionUUID->"f2005b8b-f26f-4d2b-8d11-a73467d06b24"],

Cell[BoxData["\<\"{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 2, 2, 1}, {1, 2, \
3, 3, 3, 3, 2, 1}, {1, 2, 3, 4, 4, 3, 2, 1}, {1, 2, 3, 4, 4, 3, 2, 1}, {1, 2, \
3, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1, 1, 1}}\"\>"], \
"Output",
 CellLabel->"Out[2]=",
 CellID->217759108,ExpressionUUID->"241f061f-134c-499c-8228-64b4dad7c670"]
}, Open  ]],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQtQVdf9753rHbmZiTOZ5m+nba4zuU063jaT/zSTaZob8h8v//aaMc0/
TWoa27QmMTGBEDEQa4wxD9NA1QAVcwKKKIryBnkKyEPwiAgI4SHyBgkvQUEU
EiFz2g53r73W3nvt12EfBA7K9zufNnLOOuu1N2d9Weu31v5fr73zuzf/26JF
izb/D+H/frd+q9e7767ftuYe4Yffb9r8lvemNzas3vSXN7zfePfx1xYLLx4W
/vffhX+Qf09CEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARB
EARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEARBEDTnGm07
my/qbNuou+syg3KMXW2uyJd1ZzXOLRrcvJCZqHvZnri2ru4dt9cEWMTR8VpF
4pqKc36OWS0IguaZbrTWniypFKltujGnRXfXVkpFN3XPackzoI4oz0WiPKM6
3F2XmZGjJ3vTQ0sXqXTHNM59cvfQ5iLvjFS91tM+Q6Nq3hPL2Y20NKjQ7U1b
6Ey0vtFW4zdFstpnnltCL9niFw+9NYv1gaB5ptb0o56bbCJHY9rntOiiKJtU
dEbRHJTXV5tvqto+FzObYS8kTzMpqmgeGJmYgayt6Vqx//JFOsELWZL26vF3
08yPI35tWWvyEwlnzylDW18RezG/yHta2b6V7/2D++4WLvp9URUzU9XR+Ic9
2I202P94wK23V09t7awN1lbxrjWpW37iH9pmyFXeIoOJjz72Q2JxPENfnyLx
Ga+H5V/+KRPfCi79Ejn76tZ9fWsSO5/bdikxdLuot+lkSaW9dcylD1EvFFhq
9v7EcFPbFPNFjm8GOptLNEXfuGQvkad9tHApv44JmisvVOyvH+wl+Re7mNkM
eyE5O42WPu4XW3NtBgqwXv7Sh5733cpksw/Oftm3v7RXj7+bZn4ceW3fI6wc
D9+10ouvRz0mlb76mcHpZCvnMGNeaHLwnUtpqwI3PhmVtmFi+plwTdP/3h6f
tcHaKi+af63MYE/eEh2h97Evq6ntTcAV+7NhGx8Li371Sq97Ksn05ovKu86+
uqVfODnx8UdV7z22qkNfnCxNzvjj785QaYbgatanf+3Sh8y8kGP00qn09Nff
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
IAiC7nz9fxVnfwk=
    "], {{0, 79.5}, {386., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{144., 144.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{386., 79.5},
  PlotRange->{{0, 386.}, {0, 79.5}}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[3]:=",
 CellID->193495243,ExpressionUUID->"9f8684cf-9557-4b78-ae9e-6807bce469f7"],

Cell["This looks like an array but is actually a string.", "ExampleText",
 CellID->753582868,ExpressionUUID->"69289f3a-7716-40ef-9964-477e84d7fd35"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "//", 
  "InputForm"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[4]:=",
 CellID->306146557,ExpressionUUID->"3a460d77-dd40-4320-8f73-5e593792e6af"],

Cell["\<\
\"{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 3, 3, 2, \
1}, {1, 2, 3, 4, 4, 3, 2, 1}, {1, 2, 3, 4, \\
4, 3, 2, 1}, {1, 2, 3, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, \
1, 1, 1, 1}}\"\
\>", "Output",
 CellLabel->"Out[4]//InputForm=",
 CellID->308350917,ExpressionUUID->"1502b06b-483d-4265-91f5-8a42a1ccf918"]
}, Open  ]],

Cell["We can use ToExpression to get an array.", "ExampleText",
 CellID->118921495,ExpressionUUID->"1172d360-a10b-4d9c-8e42-d9edc7985faf"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToExpression", "[", 
   RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "]"}], "//", 
  "InputForm"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[5]:=",
 CellID->23323732,ExpressionUUID->"7ab3dba0-6dd2-4175-81cd-df88c5d8f9fb"],

Cell["\<\
{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 2, 2, 1}, {1, 2, 3, 3, 3, 3, 2, \
1}, {1, 2, 3, 4, 4, 3, 2, 1}, 
 {1, 2, 3, 4, 4, 3, 2, 1}, {1, 2, 3, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 2, \
1}, {1, 1, 1, 1, 1, 1, 1, 1}}\
\>", "Output",
 CellLabel->"Out[5]//InputForm=",
 CellID->266111545,ExpressionUUID->"e43abf94-3660-4be7-8f36-6d33881846ef"]
}, Open  ]],

Cell["We can put this in the different formats now:", "ExampleText",
 CellID->661272706,ExpressionUUID->"065b7cf5-a311-4a28-bd47-8f243b80a2f3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"MatrixForm", "[", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[6]:=",
 CellID->388631051,ExpressionUUID->"0d4244bf-265b-4f89-a96c-91e95301b4bd"],

Cell[BoxData[
 TagBox[
  RowBox[{"(", "\[NoBreak]", GridBox[{
     {"1", "1", "1", "1", "1", "1", "1", "1"},
     {"1", "2", "2", "2", "2", "2", "2", "1"},
     {"1", "2", "3", "3", "3", "3", "2", "1"},
     {"1", "2", "3", "4", "4", "3", "2", "1"},
     {"1", "2", "3", "4", "4", "3", "2", "1"},
     {"1", "2", "3", "3", "3", "3", "2", "1"},
     {"1", "2", "2", "2", "2", "2", "2", "1"},
     {"1", "1", "1", "1", "1", "1", "1", "1"}
    },
    GridBoxAlignment->{"Columns" -> {{Center}}, "Rows" -> {{Baseline}}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.7]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}], "\[NoBreak]", ")"}],
  Function[BoxForm`e$, 
   MatrixForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[6]//MatrixForm=",
 CellID->5198380,ExpressionUUID->"c596c625-1cea-4025-ac62-5e35af829890"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Dataset", "[", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[7]:=",
 CellID->200834887,ExpressionUUID->"cb433ffc-f0a9-422a-9cc0-d767490e42d1"],

Cell[BoxData[
 TagBox[
  TagBox[
   DynamicModuleBox[{TypeSystem`NestedGrid`PackagePrivate`$state$$ = <|
    "InitialData" -> {{1, 1, 1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 2, 2, 1}, {1, 
      2, 3, 3, 3, 3, 2, 1}, {1, 2, 3, 4, 4, 3, 2, 1}, {1, 2, 3, 4, 4, 3, 2, 
      1}, {1, 2, 3, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 
      1, 1, 1}}, "AllowEmbedding" -> True, "InitialShape" -> 
     TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[8, 8], 8, 8, {All}], "InitialType" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 8], 8], "Meta" -> <||>, "RowTarget" -> 20, 
     "ColumnTarget" -> 10, "Shape" -> TypeSystem`PackageScope`Limited[
       TypeSystem`PackageScope`MatrixShape[8, 8], 8, 8, {All}], "Type" -> 
     TypeSystem`Vector[
       TypeSystem`Vector[
        TypeSystem`Atom[Integer], 8], 8], "Path" -> {}, "DisplayedRowCount" -> 
     8, "DisplayedColumnCount" -> 8, "DataRowCount" -> 8, "DataColumnCount" -> 
     8, "SortPaths" -> {}, "SortDirections" -> {}, "HiddenItemsMap" -> Null, 
     "UpdateType" -> 1|>, TypeSystem`NestedGrid`PackagePrivate`$outputID$$, 
    TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
    TypeSystem`NestedGrid`PackagePrivate`$vPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$hPos$$ = 1, 
    TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
    DynamicModule[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
        Style[
         Grid[{{
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{1, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{2, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{3, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{4, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["4"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{5, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["3"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{6, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["2"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{7, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}, {
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 1}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 2}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 3}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 4}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 5}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 6}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 7}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}], 
            Item[
             Pane[
              Annotation[
               RawBoxes["1"], 
               TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][{8, 8}, 
                "Item", False], "Mouse"], 
              ImageSize -> {{34, Full}, Automatic}, 
              ImageMargins -> {{5, 3}, {4, 5}}], 
             ItemSize -> {Full, Automatic}]}}, 
          BaseStyle -> {
           ContextMenu -> 
            Dynamic[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
              Which[TypeSystem`NestedGrid`PackagePrivate`$lastOutputID =!= 
                TypeSystem`NestedGrid`PackagePrivate`localHold[
                 TypeSystem`NestedGrid`PackagePrivate`$outputID$$], {}, 
                TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger === 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu, True, 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenuTrigger = 
                 TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger; 
                TypeSystem`NestedGrid`PackagePrivate`$lastContextMenu = 
                 Block[{TypeSystem`NestedGrid`PackagePrivate`$globalScrollPos = \
{TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$}}, 
                   
                   With[{TypeSystem`NestedGrid`PackagePrivate`lastPath$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$ = 
                    TypeSystem`NestedGrid`PackagePrivate`$\
lastPathIsLeafHeader, TypeSystem`NestedGrid`PackagePrivate`headerHidden$ = And[
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`$lastPathType, 
                    Alternatives["RowHeader", "ColumnHeader"]], 
                    TypeSystem`NestedGrid`PackagePrivate`headerHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]], 
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`allHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`anyHidden$ = 
                    TypeSystem`NestedGrid`PackagePrivate`anyHiddenQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ = 
                    TypeSystem`NestedGrid`PackagePrivate`columnSortDirection[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortPaths"], 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$[
                    "SortDirections"]], 
                    TypeSystem`NestedGrid`PackagePrivate`haveData$ = Not[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`datasetInitialData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$]]], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$ = Not[
                    FreeQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, Keys]]}, 
                    Join[{
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    Not[TypeSystem`NestedGrid`PackagePrivate`anyHidden$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$], 
                    Nothing, 
                    MenuItem[
                    "Show " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "remove"]], MenuEvaluator -> Automatic]], 
                    If[
                    Or[
                    Not[TypeSystem`NestedGrid`PackagePrivate`haveData$], 
                    TypeSystem`NestedGrid`PackagePrivate`pathEmptyQ[
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath, 
                    TypeSystem`NestedGrid`PackagePrivate`$state$$], 
                    TypeSystem`NestedGrid`PackagePrivate`isKeyDummy$, 
                    And[
                    TypeSystem`NestedGrid`PackagePrivate`allHidden$, 
                    TypeSystem`NestedGrid`PackagePrivate`headerHidden$]], 
                    Nothing, 
                    MenuItem[
                    "Hide " <> 
                    Which[TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "Item", "", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "RowHeader", "Row", 
                    TypeSystem`NestedGrid`PackagePrivate`lastPathType$ == 
                    "ColumnHeader", "Column", True, ""], 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateHiddenItems[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, "add"]], 
                    MenuEvaluator -> Automatic]], Delimiter}, 
                    If[
                    And[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MatchQ[TypeSystem`NestedGrid`PackagePrivate`lastPathType$, 
                    Alternatives["ColumnHeader", "KeyDummy"]], 
                    TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
                    Not[TypeSystem`NestedGrid`PackagePrivate`allHidden$]], {
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Ascending", 
                    MenuItem["Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Ascending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    "Descending", 
                    MenuItem["Reverse Sort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, 
                    "Descending"]], MenuEvaluator -> Automatic], Nothing], 
                    If[
                    TypeSystem`NestedGrid`PackagePrivate`sortDirection$ =!= 
                    None, 
                    MenuItem["Unsort", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`updateSort[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    TypeSystem`NestedGrid`PackagePrivate`localHold[
                    TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
                    TypeSystem`NestedGrid`PackagePrivate`lastPath$, None]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter}, {}], {
                    MenuItem["Copy Position to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Copy Data to Clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Nothing], Delimiter, 
                    MenuItem["Paste Position in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    If[TypeSystem`NestedGrid`PackagePrivate`haveData$, 
                    MenuItem["Paste Data in New Cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], Nothing]}]]]]], FontFamily -> 
            "Source Sans Pro", FontSize -> 14, FontWeight -> Plain}, Dividers -> 
          All, FrameStyle -> GrayLevel[0.7490196078431373], 
          Spacings -> {0, 0}, Alignment -> Left, 
          BaseStyle -> {
           FontFamily -> "Source Sans Pro", FontSize -> 14, FontWeight -> 
            Plain}], LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
         False, ShowAutoStyles -> False]], 
      TypeSystem`NestedGrid`PackagePrivate`initialQ = True}, 
     Dynamic[
      TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
         Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
         Module[{
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
           TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
           TypeSystem`NestedGrid`PackagePrivate`datasetData[
            TypeSystem`NestedGrid`PackagePrivate`$state$$]}, 
          TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = If[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpData$], 
             TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
             TypeSystem`NestedGrid`PackagePrivate`renderGrid[
             TypeSystem`NestedGrid`PackagePrivate`$state$$, 
              TypeSystem`NestedGrid`PackagePrivate`$path$$, 
              TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
              TypeSystem`NestedGrid`PackagePrivate`localHold[
              TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
             TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
            Not[
             FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
            TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
            TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
       TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$; 
       TypeSystem`NestedGrid`PackagePrivate`$hPos$$; If[
         FailureQ[TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
         TypeSystem`SparseGrid[
          TypeSystem`H["(data no longer present)"]], 
         TypeSystem`NestedGrid`PackagePrivate`renderedGrid]], 
      TrackedSymbols :> {
       TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$}], 
     DynamicModuleValues :> {}], 
    TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
     TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
      TypeSystem`PackageScope`SubViewPathbar[
      TypeSystem`NestedGrid`PackagePrivate`$path$$, 
       TypeSystem`NestedGrid`PackagePrivate`updateState[
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$path$$, 
        TypeSystem`NestedGrid`PackagePrivate`$vPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$hPos$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
        TypeSystem`NestedGrid`PackagePrivate`localHold[
        TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]]], 
     TrackedSymbols :> {TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
    TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Style[
     Framed[
      Dynamic[
       Replace[
       TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$, {
        TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][Null, 
           Blank[]] -> "", TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
           TypeSystem`NestedGrid`PackagePrivate`localHold[
           TypeSystem`NestedGrid`PackagePrivate`$outputID$$]][
           Pattern[TypeSystem`NestedGrid`PackagePrivate`path$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`pathType$, 
            Blank[]], 
           Pattern[TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$, 
            Blank[]]] :> (
          Increment[TypeSystem`NestedGrid`PackagePrivate`$contextMenuTrigger]; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
           TypeSystem`NestedGrid`PackagePrivate`path$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathType = 
           TypeSystem`NestedGrid`PackagePrivate`pathType$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastPathIsLeafHeader = 
           TypeSystem`NestedGrid`PackagePrivate`isLeafHeader$; 
          TypeSystem`NestedGrid`PackagePrivate`$lastOutputID = 
           TypeSystem`NestedGrid`PackagePrivate`localHold[
            TypeSystem`NestedGrid`PackagePrivate`$outputID$$]; 
          TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
           TypeSystem`NestedGrid`PackagePrivate`path$, 
            TypeSystem`NestedGrid`PackagePrivate`makePathElements]), Null :> 
         Spacer[10], Blank[] :> Spacer[10]}], 
       TrackedSymbols :> {
        TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$}], FrameStyle -> 
      None, ImageMargins -> 0, FrameMargins -> 0, Alignment -> Top, 
      ImageSize -> {Automatic, 15}], FontSize -> 1], 
    TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = Null}, 
    DynamicWrapperBox[
     DynamicBox[ToBoxes[
       Dataset`DatasetContent[
       2, "Path" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$path$$], 
        "Grid" -> Hold[TypeSystem`NestedGrid`PackagePrivate`$grid$$], "State" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$state$$], "VPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$vPos$$], "HPos" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$hPos$$], "TopBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$topBar$$], "BottomBar" -> 
        Hold[TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$], "OutputID" -> 
        Hold[
          TypeSystem`NestedGrid`PackagePrivate`localHold[
          TypeSystem`NestedGrid`PackagePrivate`$outputID$$]]], StandardForm],
      ImageSizeCache->{337., {113.8544921875, 119.1455078125}},
      TrackedSymbols:>{
       TypeSystem`NestedGrid`PackagePrivate`$state$$, 
        TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
     TypeSystem`NestedGrid`PackagePrivate`mouseAnnotation$$ = 
     MouseAnnotation[],
     ImageSizeCache->{337., {113.8544921875, 119.1455078125}}],
    BaseStyle->{LineBreakWithin -> False},
    DynamicModuleValues:>{},
    Initialization:>(TypeSystem`NestedGrid`PackagePrivate`$outputID$$ = 
     CreateUUID[]),
    UnsavedVariables:>{TypeSystem`NestedGrid`PackagePrivate`$outputID$$}],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  Dataset`InterpretDataset[1],
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellLabel->"Out[7]=",
 CellID->141799700,ExpressionUUID->"3a55253d-b681-4818-9c3d-52c6497d2fde"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[8]:=",
 CellID->355353834,ExpressionUUID->"4a001344-bb98-4afd-a59b-c4ace5874b82"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1", "1", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "1", "1", "1", "1", "1", "1", "1"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[8]=",
 CellID->228195783,ExpressionUUID->"12d823a4-078e-4bfa-ad3b-e4f3c4344f64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"ToExpression", "[", 
    RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "]"}], ",", 
   RowBox[{"Frame", "->", "True"}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[9]:=",
 CellID->536770782,ExpressionUUID->"78a9b674-8703-42ce-9eb6-db178e7cc83b"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1", "1", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "1", "1", "1", "1", "1", "1", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> True}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[9]=",
 CellID->203060471,ExpressionUUID->"6ec14cb7-105d-4622-b60a-8ad0bc66829e"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"ToExpression", "[", 
    RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}]}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[10]:=",
 CellID->74041378,ExpressionUUID->"3f37594c-7e19-4868-869a-6394bae4f627"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1", "1", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "1", "1", "1", "1", "1", "1", "1"}
   },
   AutoDelete->False,
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellLabel->"Out[10]=",
 CellID->292004015,ExpressionUUID->"5b57a6c8-0f14-4cc7-adfa-336ddd1b7d64"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[11]:=",
 CellID->275973262,ExpressionUUID->"a9ddf837-9bd4-4e9d-b7c1-7c8a1784474e"],

Cell[BoxData[
 TagBox[GridBox[{
    {"1", "1", "1", "1", "1", "1", "1", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "4", "4", "3", "2", "1"},
    {"1", "2", "3", "3", "3", "3", "2", "1"},
    {"1", "2", "2", "2", "2", "2", "2", "1"},
    {"1", "1", "1", "1", "1", "1", "1", "1"}
   },
   GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
   GridBoxSpacings->{"Columns" -> {
       Offset[0.27999999999999997`], {
        Offset[2.0999999999999996`]}, 
       Offset[0.27999999999999997`]}, "Rows" -> {
       Offset[0.2], {
        Offset[0.4]}, 
       Offset[0.2]}}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellLabel->"Out[11]//TableForm=",
 CellID->631097174,ExpressionUUID->"6303839f-954c-417f-b04b-abffeadc34fa"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableView", "[", 
  RowBox[{"ToExpression", "[", 
   RowBox[{"noMatrixFormFunction", "[", "7", "]"}], "]"}], "]"}]], "Input",
 CellProlog:>Needs["PeterBurbery`NewLinearAlgebraPaclet`"],
 CellLabel->"In[12]:=",
 CellID->209601947,ExpressionUUID->"166f445e-9e32-422f-90a9-1615a18e93f0"],

Cell[BoxData[
 TableViewBox[{{1, 1, 1, 1, 1, 1, 1, 1}, {1, 2, 2, 2, 2, 2, 2, 1}, {1, 2, 3, 
  3, 3, 3, 2, 1}, {1, 2, 3, 4, 4, 3, 2, 1}, {1, 2, 3, 4, 4, 3, 2, 1}, {1, 2, 
  3, 3, 3, 3, 2, 1}, {1, 2, 2, 2, 2, 2, 2, 1}, {1, 1, 1, 1, 1, 1, 1, 1}}, {
  Number, String}]], "Output",
 CellLabel->"Out[12]=",
 CellID->136926870,ExpressionUUID->"b82be0a9-5ad7-4aab-b700-f4dedf7ddfb1"]
}, Open  ]],

Cell["\<\
Although the API method has many downsides, this method is easier.\
\>", "ExampleText",
 CellID->164597094,ExpressionUUID->"93d5af76-3cc7-46f6-91b3-417a2eefbc8c"]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"}, 
  Closed]]]]
}, Dynamic[CurrentValue[
 EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, 
  Closed]]]],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, 
       "RelatedFunction.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"See", " ", "Also"}], "SeeAlsoSection"]},
      {Cell[TextData[{
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["BoxMatrix"]], "paclet:ref/BoxMatrix"},
          "RefLink",
          BaseStyle->{"InlineFormula"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",ExpressionUUID->
         "37910009-c2fc-48d0-84a2-d886259e86d2"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["ConstantArray"]], "paclet:ref/ConstantArray"},
          "RefLink",
          BaseStyle->{"InlineFormula"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"5d59986e-1493-49ad-9768-8f761ff2282f",ExpressionUUID->
         "8c8938a7-1d89-4fb9-a888-9c020e3cfed0"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["DiamondMatrix"]], "paclet:ref/DiamondMatrix"},
          "RefLink",
          BaseStyle->{"InlineFormula"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"1caf3ab1-8935-4d81-ac6d-4d36138861ce",ExpressionUUID->
         "b7913610-61b3-4109-98a9-06d87bb6f877"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["CrossMatrix"]], "paclet:ref/CrossMatrix"},
          "RefLink",
          BaseStyle->{"InlineFormula"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"27e91861-396b-4aa4-9d87-d9688fc9ea8d",ExpressionUUID->
         "671aa223-4cae-4d91-8c61-018a908d6379"],
        "\[NonBreakingSpace]",
        StyleBox[
        "\[MediumSpace]\[FilledVerySmallSquare]\[MediumSpace]", 
         "InlineSeparator"],
        " ",
        Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["DiskMatrix"]], "paclet:ref/DiskMatrix"},
          "RefLink",
          BaseStyle->{"InlineFormula"}]], "InlineFormula",
         FontFamily->"Source Sans Pro",
         CellTags->"f94cc014-41ec-4151-822a-786a9eca4c38",ExpressionUUID->
         "573078d5-bbb2-4a09-924d-acc756a2ce80"]
       }], "SeeAlso",ExpressionUUID->"4e316c3f-85fa-42a6-9a68-359ee610bffb"]}
     }]}
  }]], "SeeAlsoSection",ExpressionUUID->"eaa5b3eb-84bb-4edc-92d4-\
d66143b822ac"],

Cell[BoxData[GridBox[{
   {
    DynamicBox[FEPrivate`ImportImage[
      FrontEnd`FileName[{"Documentation", "FooterIcons"}, "RelatedGuide.png"]],
     ImageSizeCache->{50., {27., 33.}}], GridBox[{
      {
       StyleBox[
        RowBox[{"Related", " ", "Guides"}], "MoreAboutSection"]},
      {
       RowBox[{"\[FilledVerySmallSquare]", Cell[BoxData[
         TemplateBox[{
           Cell[
            TextData["Matrices"]], 
           "paclet:PeterBurbery/NewLinearAlgebraPaclet/guide/Matrices"},
          "RefLinkPlain",
          BaseStyle->{"MoreAbout"}]], "MoreAbout",ExpressionUUID->
         "a0686d91-87e9-4acb-a047-4ab9a378184b"]}]}
     }]}
  }]], "MoreAboutSection",ExpressionUUID->"6cd92346-00b0-47ed-bade-\
35d9e78fa366"],

Cell[BoxData[GridBox[{
   {
    TemplateBox[{29},
     "Spacer1"], GridBox[{
      {
       RowBox[{
        TemplateBox[{17},
         "Spacer1"], 
        StyleBox[
         RowBox[{"Related", " ", "Links"}], "RelatedLinksSection"]}]},
      {Cell[TextData[Cell[BoxData[
        RowBox[{
         TemplateBox[{16},
          "Spacer1"], "\[FilledVerySmallSquare]", Cell[BoxData[
          TemplateBox[{
            Cell[
             TextData[
              Cell[
               TextData[{
                 Cell[
                  BoxData[
                   TemplateBox[{2}, "Spacer1"]]], 
                 "Beecrowd Programming challenge 1435 Square Matrix I"}]]]], 
            "https://www.beecrowd.com.br/judge/en/problems/view/1435"},
           "WebLink",
           BaseStyle->{"RelatedLinks"}]],ExpressionUUID->
          "9d162d8e-777b-4231-82a1-ce7695885b74"]}]],ExpressionUUID->
        "31d7fa1e-28c5-4527-8b30-ae8eac4e394e"]], "RelatedLinks",
        ExpressionUUID->"df9cf0f3-fc60-4f8e-b3fb-cbd5ef40abe0"]}
     }]}
  }]], "RelatedLinksSection",ExpressionUUID->"a79cd1af-9ee0-4c32-af28-\
8da13e2e88cb"],

Cell[" ", "FooterCell",ExpressionUUID->"8133028f-3302-4fd1-a3c4-17c0da73a558"]
},
Saveable->False,
ScreenStyleEnvironment->"Working",
WindowSize->{900, 557},
WindowMargins->{{0, Automatic}, {Automatic, 30}},
WindowTitle->"PyramidMatrix",
TaggingRules->{
 "ModificationHighlight" -> False, "ColorType" -> "", "LinkTrails" -> "", 
  "HasOptions" -> True, "ExampleCounter" -> 1, 
  "Openers" -> {
   "PrimaryExamplesSection" -> Open, 
    "ExampleSection" -> {"0" -> Open, "2" -> Closed}, "NotesSection" -> 
    Closed}, "NewStyles" -> True, "CitationPopupData" -> $Failed, 
  "ShowCitation" -> False, "RootCaptions" -> "", 
  "Metadata" -> {
   "built" -> "{2023, 8, 30, 21, 42, 16.4861672}", 
    "history" -> {"XX", "", "", ""}, "context" -> 
    "PeterBurbery`NewLinearAlgebraPaclet`", "keywords" -> {}, 
    "specialkeywords" -> {}, "tutorialcollectionlinks" -> {}, "index" -> True,
     "label" -> "Peter Burbery/ New Linear Algebra Paclet Symbol", "language" -> 
    "en", "paclet" -> "PeterBurbery/NewLinearAlgebraPaclet", "status" -> 
    "None", "summary" -> 
    "PyramidMatrix[n] makes a pyramid matrix of size n by n.", 
    "synonyms" -> {}, "tabletags" -> {}, "title" -> "PyramidMatrix", 
    "titlemodifier" -> "", "metadescription" -> "", "windowtitle" -> 
    "PyramidMatrix", "type" -> "Symbol", "uri" -> 
    "PeterBurbery/NewLinearAlgebraPaclet/ref/PyramidMatrix"}},
CellContext->"Global`",
FrontEndVersion->"13.3 for Microsoft Windows (64-bit) (July 27, 2023)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[
    StyleDefinitions -> FrontEnd`FileName[{"Wolfram"}, "Reference.nb"]]], 
   Cell[
    StyleData["Input"], CellContext -> "Global`"], 
   Cell[
    StyleData["Output"], CellContext -> "Global`"]}, Visible -> False, 
  FrontEndVersion -> "13.3 for Microsoft Windows (64-bit) (July 27, 2023)", 
  StyleDefinitions -> "Default.nb"],
ExpressionUUID->"d2944982-977c-4217-aefa-28f5733efd41"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "PrimaryExamplesSection"->{
  Cell[10814, 287, 1419, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"d9a00bdd-9fae-49e6-90b7-68b7afb2a29a",
   CellTags->"PrimaryExamplesSection",
   CellID->33887368]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"PrimaryExamplesSection", 210946, 4603}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[588, 21, 5752, 138, 57, "AnchorBarGrid",ExpressionUUID->"386fe82c-a44d-431b-8078-6f250f4d52d5",
 CellID->1],
Cell[6343, 161, 118, 0, 23, "ContextNameCell",ExpressionUUID->"2a9ad990-4dfc-4b4e-a6e3-c09ebc8d8ec8"],
Cell[CellGroupData[{
Cell[6486, 165, 556, 14, 56, "ObjectNameGrid",ExpressionUUID->"0a445679-2cc4-4a43-a3ff-82e217d250d0"],
Cell[7045, 181, 1070, 27, 111, "Usage",ExpressionUUID->"f40919f6-179b-434d-806c-82b3469f6af9",
 CellID->61334780]
}, Open  ]],
Cell[CellGroupData[{
Cell[8152, 213, 1918, 48, 37, "NotesSection",ExpressionUUID->"0b503c1d-0d06-4d56-b3df-2d92306b7bd1",
 CellGroupingRules->{"SectionGrouping", 50},
 CellID->53038814],
Cell[10073, 263, 411, 12, 70, "Notes",ExpressionUUID->"60a2d4cf-b734-4ad1-a4d9-e0cda93ce838",
 CellID->134360864],
Cell[10487, 277, 200, 4, 70, "Notes",ExpressionUUID->"4a90e0e2-a28a-4254-bfe1-f144ea45bfd1",
 CellID->61854692]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "NotesSection"}, Closed]]]],
Cell[CellGroupData[{
Cell[10814, 287, 1419, 37, 35, "PrimaryExamplesSection",ExpressionUUID->"d9a00bdd-9fae-49e6-90b7-68b7afb2a29a",
 CellTags->"PrimaryExamplesSection",
 CellID->33887368],
Cell[12236, 326, 227, 4, 26, "Input",ExpressionUUID->"9b62df82-9e6f-4cf0-a2f3-c934078634c9",
 CellID->457418858],
Cell[CellGroupData[{
Cell[12488, 334, 1398, 36, 30, "ExampleSection",ExpressionUUID->"6263aac8-043f-40fe-8e96-4245cafc2c25",
 CellID->260369959],
Cell[13889, 372, 127, 1, 38, "ExampleText",ExpressionUUID->"d0112831-1d77-400c-b660-574a368a2689",
 CellID->2307510],
Cell[CellGroupData[{
Cell[14041, 377, 286, 6, 26, "Input",ExpressionUUID->"989c6e24-0de7-4857-94d9-adad8683472c",
 CellID->358765751],
Cell[14330, 385, 4294, 123, 126, "Output",ExpressionUUID->"2ffb9eac-647d-4bb3-bf2a-93be7e99fb01",
 CellID->52076197]
}, Open  ]],
Cell[18639, 511, 201, 4, 38, "ExampleText",ExpressionUUID->"783bf289-01a9-4b6d-be8d-6f4831b4654b",
 CellID->458868385],
Cell[CellGroupData[{
Cell[18865, 519, 258, 5, 70, "Input",ExpressionUUID->"4150b615-3b8c-401e-bd2e-013eae9398cd",
 CellID->412061603],
Cell[19126, 526, 3810, 63, 402, "Output",ExpressionUUID->"f72c0bc4-caf1-4b75-9d4b-f5f5e0ec7029",
 CellID->454915030]
}, Open  ]],
Cell[22951, 592, 216, 4, 70, "ExampleText",ExpressionUUID->"e27bda56-35b7-4d8a-bbe3-e88356fb5274",
 CellID->128603843],
Cell[CellGroupData[{
Cell[23192, 600, 258, 5, 70, "Input",ExpressionUUID->"0e8ed541-4b06-47d6-98a2-ee36dac47392",
 CellID->622187495],
Cell[23453, 607, 4082, 65, 418, "Output",ExpressionUUID->"1faf10c5-bd59-407d-ad73-94e1e1f1aaaa",
 CellID->425553151]
}, Open  ]],
Cell[27550, 675, 131, 1, 70, "ExampleText",ExpressionUUID->"165e1fe2-fda9-4406-b8c8-98bf85238e47",
 CellID->516833841],
Cell[CellGroupData[{
Cell[27706, 680, 254, 5, 70, "Input",ExpressionUUID->"8b52780e-8188-4956-8a97-93acde263711",
 CellID->412806393],
Cell[27963, 687, 59519, 1228, 70, "Output",ExpressionUUID->"19b1c3c2-2980-4050-bb84-b85fb0caf716",
 CellID->311524691]
}, Open  ]],
Cell[87497, 1918, 128, 1, 70, "ExampleText",ExpressionUUID->"5528b6bd-ac9b-4358-a9d9-1e5bc11eafda",
 CellID->635113846],
Cell[CellGroupData[{
Cell[87650, 1923, 254, 5, 70, "Input",ExpressionUUID->"218e25d7-df58-45cf-a677-ce36b4b89205",
 CellID->11790604],
Cell[87907, 1930, 712, 16, 157, "Output",ExpressionUUID->"2b95e0e7-d22b-4f9b-86a7-4bdcc8c87a8f",
 CellID->18889600]
}, Open  ]],
Cell[88634, 1949, 133, 1, 70, "ExampleText",ExpressionUUID->"72c45995-f796-480c-a3fc-7581361ba8a5",
 CellID->35977684],
Cell[CellGroupData[{
Cell[88792, 1954, 311, 7, 70, "Input",ExpressionUUID->"a44cdfde-5b23-4313-8517-b577a7de6762",
 CellID->247547601],
Cell[89106, 1963, 782, 17, 164, "Output",ExpressionUUID->"c024742a-798f-48a9-9cc3-4477f28b6299",
 CellID->576449523]
}, Open  ]],
Cell[89903, 1983, 160, 2, 70, "ExampleText",ExpressionUUID->"95ed4e47-f6a1-4188-ae9b-2a10371d732a",
 CellID->518542061],
Cell[CellGroupData[{
Cell[90088, 1989, 310, 7, 70, "Input",ExpressionUUID->"6e7fdee1-02e6-4a8d-8a84-b04a6aced27f",
 CellID->278823240],
Cell[90401, 1998, 775, 17, 172, "Output",ExpressionUUID->"478d7d37-0baa-40ca-91c4-eb527e39f9fa",
 CellID->125272345]
}, Open  ]],
Cell[91191, 2018, 119, 1, 70, "ExampleText",ExpressionUUID->"22ba07a6-d8b9-4867-9c6e-1582b6e71317",
 CellID->691650248],
Cell[CellGroupData[{
Cell[91335, 2023, 260, 5, 70, "Input",ExpressionUUID->"2063d039-4a92-43b7-9f34-bac8ba0b9b95",
 CellID->244234177],
Cell[91598, 2030, 968, 23, 169, "Output",ExpressionUUID->"ab059dd3-46f7-4802-ab97-96e307b00ae6",
 CellID->29061492]
}, Open  ]],
Cell[92581, 2056, 124, 1, 70, "ExampleText",ExpressionUUID->"b55b5528-65ce-4a0f-bc91-842e89ece9af",
 CellID->286213049],
Cell[CellGroupData[{
Cell[92730, 2061, 257, 5, 70, "Input",ExpressionUUID->"391a4200-1081-4b64-b3c1-5633b5a7615e",
 CellID->231773],
Cell[92990, 2068, 455, 7, 211, "Output",ExpressionUUID->"5ed65666-ef64-4180-84eb-6b086cc2ad6f",
 CellID->232744385]
}, Open  ]],
Cell[93460, 2078, 116, 1, 70, "ExampleText",ExpressionUUID->"1eff85e0-28e3-425a-9b7a-7f463e33dbbb",
 CellID->20154116],
Cell[CellGroupData[{
Cell[93601, 2083, 260, 5, 70, "Input",ExpressionUUID->"871cc881-4bea-492a-9925-dbf7a586a4ac",
 CellID->84392691],
Cell[93864, 2090, 1040, 22, 260, "Output",ExpressionUUID->"f1d72ac7-4a11-4134-ab52-b18ffaed50ec",
 CellID->190688267]
}, Open  ]],
Cell[94919, 2115, 139, 1, 70, "ExampleText",ExpressionUUID->"25c9e918-664a-4bea-8f06-536fc90ea8ec",
 CellID->115887351],
Cell[CellGroupData[{
Cell[95083, 2120, 323, 7, 70, "Input",ExpressionUUID->"74696c9e-8945-423d-b8fa-2e45f0f01b3f",
 CellID->57004525],
Cell[95409, 2129, 906, 21, 260, "Output",ExpressionUUID->"12e0a6e6-f44b-4689-9a56-28969f1be126",
 CellID->150935467]
}, Open  ]],
Cell[CellGroupData[{
Cell[96352, 2155, 340, 7, 70, "Input",ExpressionUUID->"bd23a867-1bcf-4f50-93f4-22423d7903f8",
 CellID->455480318],
Cell[96695, 2164, 1033, 24, 260, "Output",ExpressionUUID->"bd4b147c-25c1-4dc7-8219-10a38bd707a3",
 CellID->330864828]
}, Open  ]],
Cell[CellGroupData[{
Cell[97765, 2193, 334, 7, 70, "Input",ExpressionUUID->"3b415342-f5b6-4d04-82a0-1ef0b7a03fcd",
 CellID->7469493],
Cell[98102, 2202, 1036, 24, 260, "Output",ExpressionUUID->"6325d3f2-b5e3-4a89-88c5-9d6904c174f2",
 CellID->23697899]
}, Open  ]],
Cell[CellGroupData[{
Cell[99175, 2231, 335, 7, 70, "Input",ExpressionUUID->"764ff9de-d726-44e6-9d20-aa2ed31734fb",
 CellID->207499931],
Cell[99513, 2240, 1033, 24, 260, "Output",ExpressionUUID->"8d9a336a-3172-4086-885f-a00e097d199c",
 CellID->163031000]
}, Open  ]],
Cell[CellGroupData[{
Cell[100583, 2269, 339, 7, 70, "Input",ExpressionUUID->"17a16633-c2fd-4c62-96dd-f9d6308fb650",
 CellID->124966366],
Cell[100925, 2278, 1033, 24, 260, "Output",ExpressionUUID->"38237d70-34e0-44ee-9925-8bbb193f6548",
 CellID->460099264]
}, Open  ]],
Cell[CellGroupData[{
Cell[101995, 2307, 339, 7, 70, "Input",ExpressionUUID->"58852b5f-b6f7-4388-907e-ec27b91c216d",
 CellID->223905323],
Cell[102337, 2316, 1037, 24, 260, "Output",ExpressionUUID->"47bee20b-3fe2-4ce8-8e9a-beb592cd748d",
 CellID->696581826]
}, Open  ]],
Cell[103389, 2343, 111, 1, 70, "ExampleText",ExpressionUUID->"e0635b31-8462-4023-bff9-de43576472bd",
 CellID->62779177],
Cell[CellGroupData[{
Cell[103525, 2348, 296, 6, 70, "Input",ExpressionUUID->"c592a3d8-21bb-4285-a2c4-a9911dc22b67",
 CellID->338257379],
Cell[103824, 2356, 544, 13, 57, "Output",ExpressionUUID->"d192613a-476e-414d-abc0-515220cfd141",
 CellID->241052656]
}, Open  ]],
Cell[104383, 2372, 146, 1, 70, "ExampleText",ExpressionUUID->"15de04e7-8c52-4efd-aac8-ff252d955634",
 CellID->279011105]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "0"}, Closed]]]],
Cell[CellGroupData[{
Cell[104666, 2380, 1420, 37, 70, "ExampleSection",ExpressionUUID->"47e266d2-12c7-482d-a3b6-cd38eead3abe",
 CellID->356344989],
Cell[106089, 2419, 195, 4, 70, "ExampleText",ExpressionUUID->"d6325548-5f32-453d-a99f-423df758c2a3",
 CellID->319252617],
Cell[CellGroupData[{
Cell[106309, 2427, 509, 13, 70, "Input",ExpressionUUID->"df702c1f-0b4e-439b-aab3-3f460309c7bb",
 CellID->794541499],
Cell[106821, 2442, 8230, 156, 70, "Output",ExpressionUUID->"8ab8fa8e-7036-443c-9534-bdefe5c72843",
 CellID->43130629]
}, Open  ]],
Cell[115066, 2601, 888, 18, 70, "ExampleText",ExpressionUUID->"c50741f8-7875-4d46-97b8-015418e34d48",
 CellID->103935485],
Cell[CellGroupData[{
Cell[115979, 2623, 273, 5, 70, "Input",ExpressionUUID->"326e2bc9-bcdb-46a4-843e-95e5eb816cfa",
 CellID->430295149],
Cell[116255, 2630, 9199, 181, 70, "Echo",ExpressionUUID->"f2005b8b-f26f-4d2b-8d11-a73467d06b24",
 CellID->247804044],
Cell[125457, 2813, 347, 5, 51, "Output",ExpressionUUID->"241f061f-134c-499c-8228-64b4dad7c670",
 CellID->217759108]
}, Open  ]],
Cell[125819, 2821, 18301, 306, 70, "Input",ExpressionUUID->"9f8684cf-9557-4b78-ae9e-6807bce469f7",
 CellID->193495243],
Cell[144123, 3129, 148, 1, 70, "ExampleText",ExpressionUUID->"69289f3a-7716-40ef-9964-477e84d7fd35",
 CellID->753582868],
Cell[CellGroupData[{
Cell[144296, 3134, 266, 6, 70, "Input",ExpressionUUID->"3a460d77-dd40-4320-8f73-5e593792e6af",
 CellID->306146557],
Cell[144565, 3142, 354, 7, 66, "Output",ExpressionUUID->"1502b06b-483d-4265-91f5-8a42a1ccf918",
 CellID->308350917]
}, Open  ]],
Cell[144934, 3152, 138, 1, 70, "ExampleText",ExpressionUUID->"1172d360-a10b-4d9c-8e42-d9edc7985faf",
 CellID->118921495],
Cell[CellGroupData[{
Cell[145097, 3157, 305, 7, 70, "Input",ExpressionUUID->"7ab3dba0-6dd2-4175-81cd-df88c5d8f9fb",
 CellID->23323732],
Cell[145405, 3166, 349, 7, 66, "Output",ExpressionUUID->"e43abf94-3660-4be7-8f36-6d33881846ef",
 CellID->266111545]
}, Open  ]],
Cell[145769, 3176, 143, 1, 70, "ExampleText",ExpressionUUID->"065b7cf5-a311-4a28-bd47-8f243b80a2f3",
 CellID->661272706],
Cell[CellGroupData[{
Cell[145937, 3181, 308, 6, 70, "Input",ExpressionUUID->"0d4244bf-265b-4f89-a96c-91e95301b4bd",
 CellID->388631051],
Cell[146248, 3189, 932, 23, 154, "Output",ExpressionUUID->"c596c625-1cea-4025-ac62-5e35af829890",
 CellID->5198380]
}, Open  ]],
Cell[CellGroupData[{
Cell[147217, 3217, 305, 6, 70, "Input",ExpressionUUID->"cb433ffc-f0a9-422a-9cc0-d767490e42d1",
 CellID->200834887],
Cell[147525, 3225, 51094, 1040, 70, "Output",ExpressionUUID->"3a55253d-b681-4818-9c3d-52c6497d2fde",
 CellID->141799700]
}, Open  ]],
Cell[CellGroupData[{
Cell[198656, 4270, 302, 6, 70, "Input",ExpressionUUID->"4a001344-bb98-4afd-a59b-c4ace5874b82",
 CellID->355353834],
Cell[198961, 4278, 622, 15, 142, "Output",ExpressionUUID->"12d823a4-078e-4bfa-ad3b-e4f3c4344f64",
 CellID->228195783]
}, Open  ]],
Cell[CellGroupData[{
Cell[199620, 4298, 359, 8, 70, "Input",ExpressionUUID->"78a9b674-8703-42ce-9eb6-db178e7cc83b",
 CellID->536770782],
Cell[199982, 4308, 691, 16, 149, "Output",ExpressionUUID->"6ec14cb7-105d-4622-b60a-8ad0bc66829e",
 CellID->203060471]
}, Open  ]],
Cell[CellGroupData[{
Cell[200710, 4329, 358, 8, 70, "Input",ExpressionUUID->"3f37594c-7e19-4868-869a-6394bae4f627",
 CellID->74041378],
Cell[201071, 4339, 685, 16, 156, "Output",ExpressionUUID->"5b57a6c8-0f14-4cc7-adfa-336ddd1b7d64",
 CellID->292004015]
}, Open  ]],
Cell[CellGroupData[{
Cell[201793, 4360, 308, 6, 70, "Input",ExpressionUUID->"a9ddf837-9bd4-4e9d-b7c1-7c8a1784474e",
 CellID->275973262],
Cell[202104, 4368, 879, 22, 154, "Output",ExpressionUUID->"6303839f-954c-417f-b04b-abffeadc34fa",
 CellID->631097174]
}, Open  ]],
Cell[CellGroupData[{
Cell[203020, 4395, 308, 6, 70, "Input",ExpressionUUID->"166f445e-9e32-422f-90a9-1615a18e93f0",
 CellID->209601947],
Cell[203331, 4403, 375, 6, 192, "Output",ExpressionUUID->"b82be0a9-5ad7-4aab-b700-f4dedf7ddfb1",
 CellID->136926870]
}, Open  ]],
Cell[203721, 4412, 172, 3, 70, "ExampleText",ExpressionUUID->"93d5af76-3cc7-46f6-91b3-417a2eefbc8c",
 CellID->164597094]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "ExampleSection", "2"}, Closed]]]]
}, Dynamic[CurrentValue[EvaluationNotebook[], {TaggingRules, "Openers", "PrimaryExamplesSection"}, Closed]]]],
Cell[204123, 4423, 2908, 77, 70, "SeeAlsoSection",ExpressionUUID->"eaa5b3eb-84bb-4edc-92d4-d66143b822ac"],
Cell[207034, 4502, 739, 19, 70, "MoreAboutSection",ExpressionUUID->"6cd92346-00b0-47ed-bade-35d9e78fa366"],
Cell[207776, 4523, 1119, 31, 70, "RelatedLinksSection",ExpressionUUID->"a79cd1af-9ee0-4c32-af28-8da13e2e88cb"],
Cell[208898, 4556, 78, 0, 70, "FooterCell",ExpressionUUID->"8133028f-3302-4fd1-a3c4-17c0da73a558"]
}
]
*)

(* End of internal cache information *)

